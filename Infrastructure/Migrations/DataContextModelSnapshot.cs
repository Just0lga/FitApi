// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityAlwaysColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrainingType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("Core.Entities.TrainingMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MovementName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Set1_kg")
                        .HasColumnType("double precision");

                    b.Property<double>("Set1_reps")
                        .HasColumnType("double precision");

                    b.Property<double>("Set2_kg")
                        .HasColumnType("double precision");

                    b.Property<double>("Set2_reps")
                        .HasColumnType("double precision");

                    b.Property<double>("Set3_kg")
                        .HasColumnType("double precision");

                    b.Property<double>("Set3_reps")
                        .HasColumnType("double precision");

                    b.Property<double?>("Set4_kg")
                        .HasColumnType("double precision");

                    b.Property<double?>("Set4_reps")
                        .HasColumnType("double precision");

                    b.Property<double?>("Set5_kg")
                        .HasColumnType("double precision");

                    b.Property<double?>("Set5_reps")
                        .HasColumnType("double precision");

                    b.Property<double?>("Set6_kg")
                        .HasColumnType("double precision");

                    b.Property<double?>("Set6_reps")
                        .HasColumnType("double precision");

                    b.Property<int>("TrainingId")
                        .HasColumnType("integer");

                    b.Property<string>("TrainingType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrainingMovements");
                });
#pragma warning restore 612, 618
        }
    }
}
